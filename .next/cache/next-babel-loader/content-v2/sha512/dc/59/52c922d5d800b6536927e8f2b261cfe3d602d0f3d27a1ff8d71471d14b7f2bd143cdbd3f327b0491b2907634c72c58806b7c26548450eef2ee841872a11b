{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gil\\\\Downloads\\\\Coding\\\\react-projects\\\\meetups-nextjs\\\\pages\\\\index.js\";\n// will be routed under our-domain.com/ (defult routing)\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"My Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"browse a huge list of highly active meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://gil:test1234@cluster0.l3sni.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1 // is the number in sec, nextjs will wait untill regenerate the page for incoming req\n    // this ensure the page will be regenerated from the server after deployement\n\n  };\n}\nexport default HomePage; // const MEETUPS = [\n// \t{\n// \t\tid: 'm1',\n// \t\timage:\n// \t\t\t'https://corporette.com/wp-content/uploads/2017/03/best-places-for-informal-business-meetings-for-women-lawyers-consultants-and-more.jpg',\n// \t\ttitle: 'A first Meetup',\n// \t\taddress: 'Some address 5, 12345',\n// \t\tdescription: 'this is a first meetup!'\n// \t},\n// \t{\n// \t\tid: 'm2',\n// \t\timage:\n// \t\t\t'https://www.anywhere.pl/wp-content/uploads/2019/07/stanislawie-1024x535-2.jpg',\n// \t\ttitle: 'A second Meetup',\n// \t\taddress: 'Some address 8, 89678',\n// \t\tdescription: 'this is a second meetup!'\n// \t},\n// \t\timage:\n// \t\t\t'https://i.pinimg.com/originals/be/02/47/be0247b414bb9475d3f91015193834c4.jpg',\n// \t\ttitle: 'A second Meetup',\n// \t\taddress: 'Some address 8, 89678',\n// \t\tdescription: 'this is a second meetup!'\n// ];\n// export async function getServerSideProps(contex) { // run for every req-should be used for data changes very frequentely\n// \tconst req = contex.req;\n// \tconst res = contex.res;\n//   //fetch data from API\n// \treturn {\n// \t\tprops: {\n//       meetups: MEETUPS\n//     }\n// \t};\n// }","map":{"version":3,"sources":["C:/Users/Gil/Downloads/Coding/react-projects/meetups-nextjs/pages/index.js"],"names":["Head","MongoClient","MeetupList","Fragment","HomePage","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,IAAI,EAAC,aADN;AAEC,QAAA,OAAO,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAQC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACpB,2FADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AACjCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADmB;AAEjCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFiB;AAGjCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHmB;AAIjCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ6B,OAAb,CAAZ;AADH,KADD;AASNC,IAAAA,UAAU,EAAE,CATN,CAUN;AACA;;AAXM,GAAP;AAaA;AAED,eAAepB,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// will be routed under our-domain.com/ (defult routing)\r\nimport Head from 'next/head';\r\nimport { MongoClient } from 'mongodb';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nimport { Fragment } from 'react';\r\n\r\nfunction HomePage(props) {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>My Meetups</title>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"browse a huge list of highly active meetups!\"\r\n\t\t\t\t/>\r\n\t\t\t</Head>\r\n\t\t\t<MeetupList meetups={props.meetups} />;\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport async function getStaticProps() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://gil:test1234@cluster0.l3sni.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupCollection.find().toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: meetups.map((meetup) => ({\r\n\t\t\t\ttitle: meetup.title,\r\n\t\t\t\taddress: meetup.address,\r\n\t\t\t\timage: meetup.image,\r\n\t\t\t\tid: meetup._id.toString()\r\n\t\t\t}))\r\n\t\t},\r\n\t\trevalidate: 1\r\n\t\t// is the number in sec, nextjs will wait untill regenerate the page for incoming req\r\n\t\t// this ensure the page will be regenerated from the server after deployement\r\n\t};\r\n}\r\n\r\nexport default HomePage;\r\n\r\n// const MEETUPS = [\r\n// \t{\r\n// \t\tid: 'm1',\r\n// \t\timage:\r\n// \t\t\t'https://corporette.com/wp-content/uploads/2017/03/best-places-for-informal-business-meetings-for-women-lawyers-consultants-and-more.jpg',\r\n// \t\ttitle: 'A first Meetup',\r\n// \t\taddress: 'Some address 5, 12345',\r\n// \t\tdescription: 'this is a first meetup!'\r\n// \t},\r\n// \t{\r\n// \t\tid: 'm2',\r\n// \t\timage:\r\n// \t\t\t'https://www.anywhere.pl/wp-content/uploads/2019/07/stanislawie-1024x535-2.jpg',\r\n// \t\ttitle: 'A second Meetup',\r\n// \t\taddress: 'Some address 8, 89678',\r\n// \t\tdescription: 'this is a second meetup!'\r\n// \t},\r\n\r\n// \t\timage:\r\n// \t\t\t'https://i.pinimg.com/originals/be/02/47/be0247b414bb9475d3f91015193834c4.jpg',\r\n// \t\ttitle: 'A second Meetup',\r\n// \t\taddress: 'Some address 8, 89678',\r\n// \t\tdescription: 'this is a second meetup!'\r\n\r\n\r\n\r\n// ];\r\n\r\n// export async function getServerSideProps(contex) { // run for every req-should be used for data changes very frequentely\r\n// \tconst req = contex.req;\r\n// \tconst res = contex.res;\r\n\r\n//   //fetch data from API\r\n\r\n// \treturn {\r\n// \t\tprops: {\r\n//       meetups: MEETUPS\r\n//     }\r\n// \t};\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}